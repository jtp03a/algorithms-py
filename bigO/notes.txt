Big O is a method for comparing code mathmathically about how efficient they run
time complexity - measure how long it takes code to run, measured in the number of operations that it takes to complete
space complexity - preserving memory space

3 greek letters 
Omega - Best case scenario for running some code 
Theta - Average case
Omicron - Worse case

List iteration - build for loop to iterate and find a number
[1, 2, 3, 4, 5, 6, 7] - 1 is best case, 7 is worst case, 4 is avg case

Big O is the worst case
